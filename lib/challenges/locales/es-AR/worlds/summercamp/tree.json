{
    "id": "tree",
    "title": "Árbol",
    "short_title": "Árbol",
    "icon_class": "challenge_tree",
    "description": "¡Es hora de jugar! Hicimos algo para que juegues, un árbol cuyas ramas pueden crecer ampliamente hacia afuera y contrastar al interior. Todo desarrollado con comandos ¡Personalízalo!",
    "cover": "summercamp/day_20.png",
    "completion_text": "Juega con los números azules de los primeros comandos ¿ Qué función cumplen? ¿Por qué tienen ese efecto? Moldea el árbol a tu gusto. Si algo se complica, vuelve al menú inicial y empieza otra vez.",
    "difficulty": 3,
    "startAt": 0,
    "summerCamp": true,
    "rewards": {
        "outfit": 1
    },
    "code": "# Juega con estos números azules\narmLength = 50\niterations = 9 # Pueden chocar si pasas el 15!\ndegreeChange = 20\nhasBlossoms = 3\nblossomSize = 70\nblossomOpacity = .02\n# ^^^ Juega con estos números azules ^^^\n\n###\nEsta es una función que dibuja las ramas\ndel árbol, cuando se completa, vuelve a ejecutarse\nuna y otra vez hasta que todas las\nramas del árbol sean dibujadas!\n###\ndrawBranch = (x, y, branchesLeft, startAngle) ->\n    if branchesLeft > 0 \n        # Múevete hacia donde será dibujada la\n        # siguiente rama:\n        moveTo x, y\n        \n        # Las ramas siempre serán azules pero el ancho\n        # depende de la distancia respecto a la base del árbol\n        stroke blue, branchesLeft \n        \n        # Un poco de trigonometria, está bien\n        # si no entiendes nada de esto! Esto \n        # calcula las coordenadas donde deberían  \n        # dibujarse las ramas, y donde\n        # debería empezar la siguiente.\n        dx =  Math.cos(startAngle) * armLength \n        dy = -Math.sin(startAngle) * armLength \n        \n        # Dibuja una línea en la coordenada que\n        # acabamos de calcular\n        line dx, dy \n        \n        # Este bloque de comandos únicamente se ejecuta si\n        # la rama tiene flores. Puedes\n        # cambiar la vairable hasBlossoms \n        # top!\n        if branchesLeft <= hasBlossoms \n            # Configura el color de dibujo a un lindo rojo\n            color opacity \"rgb(247, 45, 99)\", blossomOpacity\n            # Nuestras flores no deberían tener trazo\n            stroke 0 \n            # Dibuja las flores! Estás flores\n            # se superponen unas a otras para crear un\n            # lindo efecto.\n            circle blossomSize\n        \n        # Comienza la siguiente rama hacia la derecha\n        drawBranch(x + dx, y + dy, branchesLeft - 1, startAngle - Math.PI / 180 * degreeChange) \n        # Comienza la siguiente rama de la izquierda\n        drawBranch(x + dx, y + dy, branchesLeft - 1, startAngle + Math.PI / 180 * degreeChange)\n        \n###\nFinalmente, ejecutamos la función y vemos qué \nsucede. Juega con los números azules de los primeros \ncomandos y fíjate qué puedes cambiar de este árbol\n###\ndrawBranch(stage.width * .5, stage.height, iterations, Math.PI / 2, length)",
    "steps": []
}
